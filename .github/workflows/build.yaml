name: Build and push Docker image

on:
  push:
  workflow_call:
  workflow_dispatch:

jobs:
  # Call lint workflow
  lint:
    name: Lint and Format
    uses: ./.github/workflows/lint.yaml
    secrets: inherit

  # Call contract tests workflow (runs after lint)
  contract-tests:
    name: Contract Tests
    uses: ./.github/workflows/contracts-test.yaml
    needs: lint
    secrets: inherit

  # Call E2E tests workflow (runs after lint, in parallel with contract tests)
  e2e-tests:
    name: E2E Tests
    uses: ./.github/workflows/e2e.yaml
    needs: lint
    secrets: inherit

  # Docker build and push (runs after all tests pass)
  build:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: [lint, contract-tests, e2e-tests]
    timeout-minutes: 20
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        if: startsWith(github.ref, 'refs/tags/')
        uses: docker/setup-qemu-action@v3
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Get full image name
        id: base_image_name
        env:
          BASE_IMAGE_NAME: ${{ github.repository }}
        run: |
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            echo "image_name=ghcr.io/${BASE_IMAGE_NAME}" >> $GITHUB_OUTPUT
          else
            echo "image_name=ghcr.io/${BASE_IMAGE_NAME}/tmp" >> $GITHUB_OUTPUT
          fi

      - name: Get full image name
        id: platforms
        run: |
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            echo "platforms=linux/amd64,linux/arm64" >> $GITHUB_OUTPUT
          else
            echo "platforms=linux/amd64" >> $GITHUB_OUTPUT
          fi

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ steps.base_image_name.outputs.image_name }}
          tags: |
            type=raw,value={{branch}}-{{sha}}-{{date 'X'}},enable=${{ startsWith(github.ref, 'refs/heads/') }}
            type=semver,pattern=v{{version}}

      - name: Build and push image
        uses: docker/build-push-action@v5
        with:
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: ${{ steps.platforms.outputs.platforms }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          push: true
